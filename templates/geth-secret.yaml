{{- $secretName := printf "%s-geth" .Release.Name -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "eth2-validator.labels" . | nindent 4 }}
type: Opaque
data:
{{- if empty .Values.geth.jwtSecret }}
  # Notice: Trick we learned from here https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "jwt-secret") | default (randAlphaNum 32 | b64enc) }}
  jwt-secret: {{ $jwtSecret | quote }}
{{- else }}
  jwt-secret: {{ .Values.geth.jwtSecret | b64enc | quote }}
{{- end }}
